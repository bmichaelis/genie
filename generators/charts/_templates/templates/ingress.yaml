
{{- define "{{{ .service.Package }}}.rules" -}}
{{- $serviceName := include "{{{ .service.Package }}}.name" .default -}}
  {{- range .hosts }}
    - host: {{ . }}
      http:
        paths:
          - backend:
              serviceName: {{ $serviceName }}
              servicePort: http
            path: /api/{{{ .service.Package.Name }}}
  {{- end }}
{{- end -}}
{{- if .Values.ingress.enabled -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "{{{ .service.Package }}}.fullname" . }}
  labels:
{{ include "labels" . | indent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
{{- if eq .Values.deploymentDestination "production" -}}
  {{- $hosts := tuple "{{{ .chart.Domain }}}" "www.{{{ .chart.Domain }}}" -}}
  {{- include "{{{ .service.Package }}}.rules" (dict "hosts" $hosts "default" .) -}}
{{- else -}}
  {{- $host := printf "%s.{{{ .chart.Domain }}}" .Release.Namespace }}
  {{- $hosts := tuple $host -}}
  {{- include "{{{ .service.Package }}}.rules" (dict "hosts" $hosts "default" .) -}}
{{- end }}

{{- end }}
