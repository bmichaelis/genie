syntax = "proto3";
package {{ .service.Package }};

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "{{ .service.Service }} service"
		version: "1.0"
		contact: {
			name: "<< insert author name here >>"
			url: "<< insert url here >>"
			email: "<< insert email here >>"
      }
    }
    schemes: HTTP
    consumes: "application/json"
    produces: "application/json"
    responses: {
		key: "404"
		value: {
			description: "Returned when the resource does not exist."
			schema: {
				json_schema: {
					type: STRING
				}
			}
		}
	}
};

option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

// The greeting service definition.
service {{ .service.Service }} {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {
        option (google.api.http) = {
            get: "/api/{{ .service.ServiceLower }}/hello"
        };
    }

    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
      description: "<< insert description here >>"
    };

    rpc Create (User) returns (google.protobuf.StringValue) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          post: "/api/{{ .service.ServiceLower }}"
          body: "*"
        };
    }

    rpc Get (Id) returns (User) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          get: "/api/{{ .service.ServiceLower }}/{id}"
        };
    }

    rpc Search (SearchRequest) returns (stream User) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          post: "/api/{{ .service.ServiceLower }}/search"
          body: "*"
        };
    }

    rpc Update (User) returns (google.protobuf.Empty) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          patch: "/api/{{ .service.ServiceLower }}/{id}"
          body: "*"
        };
    }

    rpc Delete (Id) returns (google.protobuf.Empty) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          delete: "/api/{{ .service.ServiceLower }}/{id}"
        };
    }

    rpc Restore (Id) returns (google.protobuf.Empty) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
          summary: "<< insert summary here >>"
          description: "<< insert description here >>"
          consumes: "application/json"
          produces: "application/json"
        };

        option (google.api.http) = {
          put: "/api/{{ .service.ServiceLower }}/{id}"
        };
    }
}

// The request message containing the user's name.
message HelloRequest {
    string name = 1;

    enum Names {
        world = 0;
        you = 1;
        again = 2;
    }
}

// The response message containing the greetings
message HelloReply {
    string message = 1;
}


message Id {
    // Check for valid Mongo ObjectId
    string id = 1 [(validate.rules).string.pattern = "/^[a-f\\d]{24}$/i"];
}

message {{ .service.Service }} {
    string id    = 1;

    // This is an example on how to provide an ObjectID without a custom docker generator
    bytes id2 = 2 [(gogoproto.customtype) = "go.mongodb.org/mongo-driver/bson/primitive.ObjectID",
                  (gogoproto.moretags) = "bson:\"_id\",omitempty",
                  (gogoproto.jsontag) = "-"];

    string email = 3 [(validate.rules).string.email = true,
                     (gogoproto.moretags) = "bson:\"email\",omitempty"];

    string name  = 4 [(validate.rules).string = {
                      pattern:   "^[^[0-9]A-Za-z]+( [^[0-9]A-Za-z]+)*$",
                      max_bytes: 256,
},
(gogoproto.moretags) = "bson:\"name\",omitempty"];

Address address = 5;

message Address {
    string street     = 1 [(gogoproto.moretags) = "bson:\"street\",omitempty"];
    string city       = 2 [(gogoproto.moretags) = "bson:\"city\",omitempty"];
    string state      = 3 [(gogoproto.moretags) = "bson:\"state\",omitempty"];
    string postalCode = 4 [(gogoproto.jsontag) = "postal_code,omitempty",
                          (gogoproto.moretags) = "bson:\"postal_code\",omitempty"];
}
}

message SearchRequest {
    string name   = 1;
    int64 limit   = 2;
    int64 offset  = 3;
}

//message SearchResults {
//  repeated User users = 1;
//}
